name: CD Pipeline - Node.js

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1           # embedded region
      EB_APP_NAME: CICD-app
      EB_ENV_NAME: CICD-env
      S3_BUCKET: cicd-eb-bucket
      VERSION_LABEL: ${{ github.sha }}

    steps:
      # 1Ô∏è‚É£ Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2Ô∏è‚É£ Install AWS CLI
      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install
          aws --version

      # 3Ô∏è‚É£ Configure AWS credentials
      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # 4Ô∏è‚É£ Zip application dynamically
      - name: Zip Application
        run: |
          APP_NAME=$(basename $GITHUB_WORKSPACE)
          ZIP_FILE="${APP_NAME}.zip"
          echo "Zipping project as $ZIP_FILE"
          zip -r $ZIP_FILE .

      # 5Ô∏è‚É£ Ensure S3 bucket exists
      - name: Ensure S3 Bucket
        run: |
          aws s3 ls "s3://cicd-eb-bucket" || aws s3 mb "s3://cicd-eb-bucket"

      # 6Ô∏è‚É£ Upload zip to S3
      - name: Upload to S3
        run: |
          APP_NAME=$(basename $GITHUB_WORKSPACE)
          ZIP_FILE="${APP_NAME}.zip"
          aws s3 cp $ZIP_FILE s3://cicd-eb-bucket/$ZIP_FILE

      # 7Ô∏è‚É£ Ensure EB Application
      - name: Ensure EB Application
        run: |
          if ! aws elasticbeanstalk describe-applications --application-names $EB_APP_NAME | grep $EB_APP_NAME; then
            aws elasticbeanstalk create-application \
              --application-name $EB_APP_NAME \
              --description "Node.js App"
          fi

      # 8Ô∏è‚É£ Ensure EB Environment
      - name: Ensure EB Environment
        run: |
          if ! aws elasticbeanstalk describe-environments --application-name $EB_APP_NAME --environment-names $EB_ENV_NAME | grep $EB_ENV_NAME; then
            aws elasticbeanstalk create-environment \
              --application-name $EB_APP_NAME \
              --environment-name $EB_ENV_NAME \
              --solution-stack-name "64bit Amazon Linux 2023 v6.6.4 running Node.js 20" \
              --region us-east-1
          fi

      # 9Ô∏è‚É£ Create application version
      - name: Create Application Version
        run: |
          APP_NAME=$(basename $GITHUB_WORKSPACE)
          ZIP_FILE="${APP_NAME}.zip"
          aws elasticbeanstalk create-application-version \
            --application-name $EB_APP_NAME \
            --version-label $VERSION_LABEL \
            --source-bundle S3Bucket=cicd-eb-bucket,S3Key=$ZIP_FILE

      # üîü Deploy to environment
      - name: Deploy to EB
        run: |
          aws elasticbeanstalk update-environment \
            --application-name $EB_APP_NAME \
            --environment-name $EB_ENV_NAME \
            --version-label $VERSION_LABEL
